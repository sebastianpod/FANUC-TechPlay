# Project Name: iRobot Zoomba

This is a hobby project inspired by cleaning robots. It was created out of curiosity to understand how workspace mapping works

## Table of Contents

- Description
- Features
- License

## Description

The program is designed to map the workspace of a Fanuc robot in a virtual environment using RoboGuide. The robot moves within a 1m x 1m x 1m cube and updates a 20x20x20 grid when it encounters an obstacle. The grid is initially filled with FALSE values, and the robot updates the corresponding "block" in the grid to TRUE upon detecting a collision. A User Frame was constructed based on this virtual cube. 
For the purpose of this project, collisions are simulated by manually setting the digital signal DI1 to high. The results are saved to a CSV file using a Karel program and then processed with Python to generate a 3D plot

## Features

- **Robotics Layer**:
  - **Karel Program**:
    - Initializes a 20x20x20 grid with FALSE values 
    - Continuously checks for a collision signal (DI[1]) 
    - Retrieves the current position of the robot in the User Frame 
    - Calculates the indices in the grid based on the robot's position 
    - Updates the grid and saves the state to a CSV file.
  - **TP Program**:
    - Called by the Karel program to get the current position of the robot
    - Saves the robot's current position relative to the User Frame

- **Python**:
    - Uses the matplotlib and numpy libraries
    - Loads the CSV file generated by the Karel program
    - Removes duplicate entries
    - Creates a 20x20x20 grid and updates it based on the robot's data
    - Generates a 3D plot showing the entire grid with occupied spaces colored red

## License
This project is available under an open-source license. Everyone is free to use, modify, and develop it further.

To run this project, RoboGuide is required. The project was written using RoboGuide ver. 9 rev. ZP.

Warning: Always test the project virtually before uploading it to a robot. Do not run it immediately in automatic mode on a real robot. It is recommended to use T1 or T2 mode first.

I am open to collaboration and any suggestions for further development


