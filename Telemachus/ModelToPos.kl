PROGRAM ModelToPos
	%NOPAUSESHFT
	%COMMENT = 'PredModelPosLoad'
CONST file_path = 'UD1:PredictedPosition.csv'
VAR
	predicted_coords: ARRAY[6] OF REAL
	predicted_pos, init_pos, offseted_pos: XYZWPR
	file_load: FILE
	i, status: INTEGER

-- This program reads predicted position coordinates from a csv file
-- and assigns these values to a position register for the robot.
-- the predicted coordinates are used to guide the robot's movements 
-- based on the predictive model

BEGIN
	-- Open file for reading predicted position data
  	OPEN FILE file_load('RO', file_path)
  
  	-- Read predicted coordinates from file
  	FOR i = 1 TO 6 DO
    		READ file_load(predicted_coords[i])
    		status = IO_STATUS(file_load)
  	ENDFOR
  	
  	-- Read function error handling 
  	IF status <> 0 THEN
		ABORT 
	ENDIF
  
  	-- Close the file
  	CLOSE FILE file_load
  
  	-- Assign predicted coordinates to position variable
  	predicted_pos.x	= predicted_coords[1]
  	predicted_pos.y	= predicted_coords[2]
  	predicted_pos.z	= predicted_coords[3]
  	predicted_pos.w= predicted_coords[4]
  	predicted_pos.p	= predicted_coords[5]
  	predicted_pos.r	= predicted_coords[6]
  	CNV_STR_CONF('nut000', predicted_pos.config_data, status)
  	
  	-- Get initial position for offset calculation
  	init_pos = GET_POS_REG(1, status)
  	
  	-- Assign adjusted coordinates to position variable
  	offseted_pos.x	= init_pos.x	+ (init_pos.x	-	predicted_pos.x)
  	offseted_pos.y	= init_pos.y	+ (init_pos.y	-	predicted_pos.y)
  	offseted_pos.z	= init_pos.z	+ (init_pos.z	-	predicted_pos.z)
  	offseted_pos.w	= init_pos.w	+ (init_pos.w	-	predicted_pos.w)
  	offseted_pos.p	= init_pos.p	+ (init_pos.p	-	predicted_pos.p)
  	offseted_pos.r	= init_pos.r	+ (init_pos.r		-	predicted_pos.r)
  
  	-- Set position register PR[2] with the predicted position offset
  	SET_POS_REG(2, offseted_pos , status)
  
END ModelToPos